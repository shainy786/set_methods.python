# print(dir(set))       #'add', 'clear', 'copy', 'difference', 'difference_update', 'discard', 'intersection', 'intersection_update', 'isdisjoint', 
                        # 'issubset', 'issuperset', 'pop', 'remove', 'symmetric_difference', 'symmetric_difference_update', 'union', 'update']

# a={}
# print(a,type(a))

# a={1,2,3}          
# b='shn'            
# a.add(b)        
# print(a)               # a  is mutable and b  immutable then o/p as unorderd of set

# a={1,2,3}          
# b=5         
# a.add(b)                 # {1, 2, 3, 5}
# print(a)

# a={1,2,3}          
# b=3.4           
# a.add(b)              #{3.4, 1, 2, 3}
# print(a)

# a={1,2,3}          
# b={2,3.4,'shn',[1,3,5]}          
# a.add(b)                   #TypeError: unhashable type: 'list'
# print(a)

# a={1,2,3}          
# b={2,3.4}          
# a.add(b)                   #TypeError: unhashable type: 'set'
# print(a)

# a={1,2,3}          
# b=[5]           
# a.add(b)        
# print(a)               #both a and b are mutable so typeerror:unhashble type 'list'

# a={1,2,3}          
# b=(2,4.5)           
# a.add(b)        
# print(a)             #a  is mutable and b  immutable then o/p as unorderd of set

# a={1,2,3}          
# b=(2,4.5,'shn',[2,3.5])           #TypeError: unhashable type: 'list'
# a.add(b)            
# print(a) 

# a={1,2,3}          
# a.clear()
# print(a)          #set()

# a={1,2,3}          
# a.copy()
# print(a)          #{1, 2, 3}

# a={1,2,3}          
# b={1,2,5}    
# print(a.difference(b))     # {3}
# print(b.difference(a))      #{5}
# print(a-b)                  #{3}
# print(b-a)                  #{5}

# a={1,2,3}          
# a.discard(2)
# print(a)                   #{1,3}

# a={1,2,3}          
# b={2,3.4} 
# v=a.intersection(b)         
# print(v)               #{2}
# l=b.intersection(a)
# print(l)               #{2}


# a={1,2,3}          
# b={2,3.4} 
# v=a.union(b)        # {1, 2, 3, 3.4}
# print(v)               
# l=b.union(a)
# print(l)              #{1, 2, 3.4, 3}


# a={1,2,3}          
# b={2,3.4} 
# print(a.isdisjoint(b))       #false               (if any common values are in  both sets then o/p as false)
# print(b.isdisjoint(a))       #false

# a={1,2,3}          
# b={4,5,6}
# print(a.isdisjoint(b))       #true               (if unique values are in  both sets then o/p as true)
# print(b.isdisjoint(a))        #true


# a={1,2,3}          
# b={2,3} 
# print(a.issubset(b))         #false 
# print(b.issubset(a))          #true

# a={1,2,3,4,5,6,9}                     
# a.pop()
# print(a)                                   (random element deleted from set)

# a={1,2,2,3,4,5,6,9}                     
# a.remove(8)
# print(a)                                   #keyerror:8
# a.remove(2)
# print(a)                                     #{1, 3, 4, 5, 6, 9}


# a={1,2,3}          
# b='shn'            
# a.add(b)        
# print(a)               # a  is mutable and b  immutable then o/p as unorderd of set

# a={1,2,3}          
# b=5         
# a.add(b)                 # {1, 2, 3, 5}
# print(a)

# a={1,2,3}          
# b=3.4           
# a.add(b)              #{3.4, 1, 2, 3}
# print(a)

# a={1,2,3}          
# b={2,3.4,'shn'}          
# a.update(b)                   #{1, 2, 3, 3.4, 'shn'}
# print(a)

# a={1,2,3}          
# b={2,3.4}          
# a.update(b)                   #{1, 2, 3, 3.4}
# print(a)

# a={1,2,3}          
# b=[5]           
# a.update(b)        #{1, 2, 3, 5}
# print(a)              

# a={1,2,3}          
# b=(2,4.5)           
# a.update(b)        
# print(a)             #{1, 2, 3, 4.5}
